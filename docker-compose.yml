version: '3.2'

services:

  # ==================
  # command line tools
  # ==================

  tools:
    build:
      context: tools
    container_name: tools
    volumes:
      - ./shared:/shared

  # ==================
  # InterSystems IRIS
  # ==================

  # irisA instance
  irisA:
    build:
      context: .
      args:
        WEBINAR_INCLUDE_API: "no"
    container_name: irisA
    command:
      --key /app/iris.key
    image: workshop-rest-iam:noapi
    ports:
    - "52773:52773"
    volumes:
    - .:/app
    - ./shared:/shared

  # irisB instance  
  irisB:
    build:
      context: .
      args:
        WEBINAR_INCLUDE_API: "yes"
    image: workshop-rest-iam:api
    container_name: irisB
    command:
      --key /app/iris.key
    ports:
    - "52774:52773"
    volumes:
    - .:/app
    - ./shared:/shared

  # irisC instance 
  irisC:
    build:
      context: .
      args:
        WEBINAR_INCLUDE_API: "yes"
    image: workshop-rest-iam:api
    container_name: irisC
    command:
      --key /app/iris.key
    ports:
    - "52775:52773"
    volumes:
    - .:/app
    - ./shared:/shared

  # ====================================
  # IAM - InterSystems API Manager 3.0.2
  # ====================================
  iam-migrations:
    image: ${ISC_IAM_IMAGE}
    command: bash -c "kong migrations bootstrap; kong migrations up; kong migrations finish"
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-iam}
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-iam}
      KONG_PG_USER: ${KONG_PG_USER:-iam}
      KONG_CASSANDRA_CONTACT_POINTS: db
      ISC_IRIS_URL: ${ISC_IRIS_URL}
      ISC_CA_CERT: ${ISC_CA_CERT}
    restart: on-failure
    links:
      - db:db
  iam:
    image: ${ISC_IAM_IMAGE}
    depends_on:
      - db
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_ANONYMOUS_REPORTS: 'off'
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-iam}
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-iam}
      KONG_PG_USER: ${KONG_PG_USER:-iam}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PORTAL: 'on'
      KONG_PORTAL_GUI_PROTOCOL: http
      KONG_PORTAL_GUI_HOST: '127.0.0.1:8003'
      KONG_ADMIN_GUI_URL: http://localhost:8002
      ISC_IRIS_URL: ${ISC_IRIS_URL}
      ISC_CA_CERT: ${ISC_CA_CERT}
    links:
      - db:db
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
      - target: 8001
        published: 8001
        protocol: tcp
      - target: 8002
        published: 8002
        protocol: tcp
      - target: 8003
        published: 8003
        protocol: tcp
      - target: 8004
        published: 8004
        protocol: tcp
      - target: 8443
        published: 8443
        protocol: tcp
      - target: 8444
        published: 8444
        protocol: tcp
      - target: 8445
        published: 8445
        protocol: tcp
    restart: on-failure
  db:
    image: postgres:14.5
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-iam}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-iam}
      POSTGRES_USER: ${KONG_PG_USER:-iam}
    volumes:
      - 'pgdata14:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-iam}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
volumes:
  pgdata14:
